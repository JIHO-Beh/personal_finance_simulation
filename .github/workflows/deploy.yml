# 워크플로우의 이름
name: CI/CD to On-premise Server

# main 브랜치에 push 할 때 실행
on:
  push:
    branches: [ main ]

jobs:
  # 1. 테스트(CI) 작업
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: salarydb_test
          POSTGRES_USER: salary_user
          POSTGRES_PASSWORD: P@ssWord!123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x backend/gradlew
      - name: Run Backend Tests with Gradle
        run: cd backend && ./gradlew test

  # 2. 이미지 빌드 및 푸시(CI) 작업 (새로 추가/수정)
  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/jiho-beh/personal_finance_simulation/backend:latest
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/jiho-beh/personal_finance_simulation/frontend:latest

  # 3. 배포(CD) 작업
  deploy:
    needs: build_and_push
    runs-on: self-hosted
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy with Docker Compose
        # gradlew build 단계를 제거하고, pull과 up만 실행
        run: |
          docker-compose pull
          docker-compose up -d --force-recreate